package Mapa;

import Obstaculo.*;
import Lista.*;
import Tanque.*;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class Mapa{
	private Celda[][] obstaculos;
	private Tanque jugador;
	private Tanque[] enemigos;
	
	public Mapa(String mapa){
		jugador= new Jugador();
		obstaculos=new Celda[13][13];
		try{
			cargarMapa(mapa);
		}catch(FileNotFoundException e){
		}catch(IOException e){
		}
		
	}	
	public int getLongitud(){
		return obstaculos.length;
	}
	public Iterable<ListaSimplementeEnlazada<Celda>> retornarMapa(){
		PositionList<ListaSimplementeEnlazada<Celda>> lista= new ListaSimplementeEnlazada<ListaSimplementeEnlazada<Celda>>();
		ListaSimplementeEnlazada<Celda> listaAux= new ListaSimplementeEnlazada<Celda>();
		for(int i=0;i<getLongitud();i++){
			for(int j=0;j<getLongitud();j++){
				listaAux.addLast(obstaculos[i][j]);
			}
			lista.addLast(listaAux);
			listaAux= new ListaSimplementeEnlazada<Celda>();
		}
		return lista;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	private void cargarMapa(String map) throws IOException, FileNotFoundException{
		String cadena;
		char[] c;
		int fila=0;
		FileReader f= new FileReader(map);
		BufferedReader b= new BufferedReader(f);
		while((cadena=b.readLine())!=null){
			c=cadena.toCharArray();
			for(int i=0;i<c.length;i++){
				switch (c[i]){
				case 'A':
					obstaculos[fila][i]= new Obstaculo("acero1",i,fila);
					break;
				case 'L':
					obstaculos[fila][i]= new Obstaculo("ladrillo1",i,fila);
					break;
				case 'G':
					obstaculos[fila][i]= new Obstaculo("agua",i,fila);
					break;
				case 'C':
					obstaculos[fila][i]= new Obstaculo("cesped",i,fila);
					break;
				case 'N':
					obstaculos[fila][i]= new Obstaculo("nulo",i,fila);
					break;
				case 'B':
					obstaculos[fila][i]= new Obstaculo("bandera1",i,fila);
					break;
				}
				
			}
			fila++;
		}
		b.close();
	}
}